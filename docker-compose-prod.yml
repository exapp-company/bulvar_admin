services:
  app:
    build:
      context: .
      dockerfile: docker_prod/php/Dockerfile
    volumes:
      - ./storage:/var/www/storage
      - ./docker_prod/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: docker_prod/nginx/Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./storage:/var/www/storage
      - ./docker_prod/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:

volumes:
  dbdata: